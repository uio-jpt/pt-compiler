
aspect LookupType {

    inh TypeDecl PTDecl.lookupType(String packageName, String typeName);
    eq PTCompilationUnit.getPTDecl(int i).lookupType(String packageName, String typeName) = lookupType(packageName, typeName);

    eq PTDecl.getSimpleClass(int i).lookupType(String packageName, String typeName) {
        //        System.out.println(String.format("%s: looking up %s.%s", getID(), packageName, typeName));
        String fullName = packageName.equals("") ? typeName : packageName + "." + typeName;
        //        System.out.print(getID() + ": has " + getClassList().size()+ ": ");
        //        for (TypeDecl type: getClassList())
            //            System.out.print(type.fullName() + " ");
        //        System.out.println();
        for (TypeDecl type: getClassList()) {
            if (type.fullName().equals(fullName)) {
                return type;
            }
        }
        return lookupType(packageName, typeName);
    }


    syn TypeDecl PTTemplate.lookupType(String name) {
        for (TypeDecl cls: getClassList()) {
            if (cls.getID().equals(name)) {
                return cls;
            }
        }
        return null;
    }

    syn ClassDecl PTDummyClass.getOriginator() = (ClassDecl) getTemplate().lookupType(getOrgID());

    syn PTTemplate PTDecl.lookupTemplate(String name) = null;
    eq PTTemplate.lookupTemplate(String name) = name.equals(getID()) ? this : null;


    syn PTClassAddsDecl PTDecl.lookupAddClass(String name) {
        for (PTClassAddsDecl decl: getAdditionClassList()) {
            if (decl.getID().equals(name))
                return decl;
        }
        return null;
    }

    inh SimpleSet PTClassDecl.lookupType(String name);

    eq PTDecl.getSimpleClass(int i).lookupType(String name) {
        for (ClassDecl decl : getClassList())
            if (decl.getID().equals(name))
                return SimpleSet.emptySet.add(decl);
        return SimpleSet.emptySet;
    }
}
