aspect ReferenceAttributes {

    syn PTTemplate PTInstDecl.getTemplate() = getTemplate(getID());
    syn PTTemplate PTDummyClass.getTemplate() = getInstDecl().getTemplate();
    inh PTTemplate PTInstDecl.getTemplate(String name);
    inh PTInstDecl PTDummyClass.getInstDecl();
    eq PTInstDecl.getPTDummyClass(int i).getInstDecl() = this;

    eq PTCompilationUnit.getPTDecl(int i).getTemplate(String name) {
        for (PTDecl decl: getPTDecls()) {
            PTTemplate template = decl.lookupTemplate(name);
            if (template != null) {
                return template;
            }
        }
        return null;
    }

    syn HashMap<String,String> PTInstDecl.getRenamedClasses() {
        HashMap<String,String> renamedClasses = new HashMap<String,String>();
        for (PTDummyClass dummy: getPTDummyClassList()) 
            renamedClasses.put(dummy.getOrgID(),dummy.getID());
        return renamedClasses;
    }

    syn HashMap<String,LinkedList<PTDummyClass>> PTDecl.getClassNamesWithDummyList() {
        HashMap<String,LinkedList<PTDummyClass>> nameAndDummies =
            new HashMap<String,LinkedList<PTDummyClass>>();
        for (PTInstDecl templateInst : getPTInstDecls()) {
            for (PTDummyClass dummy : templateInst.getPTDummyClassList()) {
                String name = dummy.getID();
                if (!nameAndDummies.containsKey(name))
                    nameAndDummies.put(name,new LinkedList<PTDummyClass>());
                LinkedList<PTDummyClass> dummies = nameAndDummies.get(name);
                dummies.add(dummy);
            }
        }
        return nameAndDummies;
    }
}
