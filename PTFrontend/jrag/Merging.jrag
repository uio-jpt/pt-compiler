aspect Merging {

    syn boolean BodyDecl.isNotEmptyConstructor() = true;
    eq ConstructorDecl.isNotEmptyConstructor() = getNumParameter() != 0 || getBlock().getNumStmt() != 0;

    syn HashSet<String> ClassDecl.getBodyDeclMethodNames() {
        HashSet <String> names = new HashSet<String>();

        for (BodyDecl decl : getBodyDeclList()) {
            String name = decl.getName();
            if (decl instanceof MethodDecl) {
                name = ((MethodDecl)decl).signature();
            }
            if (name != null) {
                names.add(name);
            }
        }
        return names;
    }
    
    /* TODO, fields and methods may collide. */
    syn HashSet<String> ClassDecl.getDefinitionsRenamed(HashMap<String,String> namesMap) {
        HashSet <String> definitionNames = new HashSet<String>();

        for (String name : getBodyDeclMethodNames()) {
            if (namesMap.containsKey(name))
                name = namesMap.get(name);
            definitionNames.add(name);
        }
        return definitionNames;
    }
    
    
    syn HashSet<String> PTDummyClass.getDefinitionsRenamed() {
        return getOriginator().getDefinitionsRenamed(getExplicitlyRenamedDefinitions());
    }

    syn HashMap<String,String> PTDummyClass.getRenamedConflictsMap(HashSet<String> conflicts) {
        HashMap<String,String> newDefinitions = new HashMap<String,String>();
        for (String conflictDef : conflicts) {
            if (conflictDef.contains("(")) {
                String s[] = conflictDef.split("\\(");
                conflictDef = s[0];
            }
            String origClassName = getOrgID();
            // TODO template name here
            newDefinitions.put(conflictDef, String.format("super[%s].%s",
                                                          origClassName,conflictDef));
        }
        return newDefinitions;
    }
    // TODO use collections. maybe create a wrapper class for hashmap
    // for add(PTDummyRename) -> put(getOrgID(), getID())
    syn HashMap<String,String> PTDummyClass.getExplicitlyRenamedDefinitions() {
        HashMap<String,String> map = new HashMap<String,String>();
        for (PTDummyRename entry : getPTDummyRenameList())
            map.put(entry.getOrgID(), entry.getID());
        return map;
    }
}
