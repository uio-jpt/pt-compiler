aspect PTDecl {

    public void PTDecl.extendAddClassesWithInstantiatons() {
        HashMap<String,LinkedList<PTDummyClass>> nameAndDummies =
            getClassNamesWithDummyList();
        for (SimpleClass decl : getSimpleClassList()) {
            String id = decl.getID();
            if (nameAndDummies.containsKey(id)) {
                if (decl.isAddsClass()) {
                    for (PTDummyClass ext : nameAndDummies.get(id))
                        decl.extendWithClassAndRename(ext);
                } else {
                    error(decl.getID() + " is not an adds class.. but got additions.");
                }
            } else if (decl.isAddsClass()) {
                decl.error(decl.getID() + " is an add class, source not found!");
            }
        }
    }        

    public void PTDecl.createEmptyMissingAddClasses() {
        HashSet<String> addClasses = getAdditionClassNamesSet();
        HashMap<String,LinkedList<PTDummyClass>> nameAndDummies =
            getClassNamesWithDummyList();
        Set<String> missingAddsClass = new HashSet<String>(nameAndDummies.keySet());
        missingAddsClass.removeAll(addClasses);

        for (String name : missingAddsClass) {
            ClassDecl cls = new ClassDecl(new Modifiers(), name,
                                          new Opt(), new List(),
                                          new List<BodyDecl>());
            PTClassAddsDecl addClass = new PTClassAddsDecl(cls);
            addSimpleClass(addClass);
        }
    }        
}
