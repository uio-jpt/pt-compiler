aspect SimpleClass {

    public HashMap<String,String> PTDummyClass.getRenamedDefinitionsMap() {
        HashMap<String,String> map = new HashMap<String,String>();
        for (PTDummyRename entry : getPTDummyRenameList()) 
            map.put(entry.getOrgID(), entry.getID());
        return map;
    }
    
    public void SimpleClass.extendWithClassAndRename(PTDummyClass dummy) {
        try {
            ClassDecl ext = dummy.getOriginator().fullCopy();

            // Dette og en del av koden i addDecl kunne godt vært faktorert ut til noe mer fornuftigt
            String orgSuperClass = ext.getSuperClassName();
            String sourceClassName = ext.getID();
            ext.renameTypes(dummy.getInstDecl().getRenamedClasses());
            ext.renameDefinitions(dummy.getRenamedDefinitionsMap());
            getClassDecl().signaturesCollides(ext);
            for (BodyDecl bd : ext.getBodyDecls()) {
                addDecl(sourceClassName, orgSuperClass, bd);
            }            
        } catch (Exception e) { throw new RuntimeException("extendWithClass!: "+e); }
    }
    
    public void SimpleClass.addDecl(String sourceClassName, String orgSuperClass, BodyDecl decl) {
        ClassDecl target = getClassDecl();
        // special case with an empty constructor with no parameters and no code.
        // TODO: sjekk om det fortatt lages tomme konstruktører
        if (decl instanceof ConstructorDecl) { 
            ConstructorDecl cd = (ConstructorDecl) decl;
            if (cd.getNumParameter() == 0 && cd.getBlock().getNumStmt() == 0) {
                return;
            } else {
                try {
                   decl = cd.toMethodDecl(target.getID(), "super" + sourceClassName, orgSuperClass);
                   target.addBodyDecl(decl);
                   return;
                }
                catch (Exception e) {
                    cd.error("Could not rewrite constructor " + cd.dumpString() + " to method during class merging.");
                }
            }
        }

        for (BodyDecl bd : target.getBodyDecls()) {
            if (bd.getClass().isInstance(decl) && decl.equalSignature(bd)) {
                decl.error("Tried to replace " + bd.dumpString() + " with " + decl.dumpString());
                //bd.replaceSelfWith(decl);
                return;
            }
        }
        target.addBodyDecl(decl);
    }
}
