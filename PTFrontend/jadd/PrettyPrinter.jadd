aspect PrettyPrint {

    eq PTTemplate.dumpString() = getClass().getName() + "[" + getID() + "]";
    eq PTPackage.dumpString() = getClass().getName() + "[" + getID() + "]";
    eq PTClassAddsDecl.dumpString() = getClass().getName() + "[" + getID() + "]";

    eq PTPackage.addsIndentationLevel() = true;
    eq PTTemplate.addsIndentationLevel() = true;

    public void PTCompilationUnit.toString(StringBuffer sb) {
        super.toString(sb);
        for (PTDecl ptDecl: getPTDecls()) 
            ptDecl.toString(sb);
    }

    public void PTDecl.toString(StringBuffer sb) {
        sb.append(indent());
        sb.append(getDeclType() + " " + getID() + " {");
        for (PTInstDecl inst : getPTInstDecls())
            inst.toString(sb);
        for (PTClassAddsDecl ptclass : getAdditionClassList())
            ptclass.toString(sb);        
        for (ClassDecl ptclass : getClassList())
            ptclass.toString(sb);

        sb.append(indent() + "}");
    }

    public void PTInstDecl.toString(StringBuffer sb) {
        sb.append(indent());
        sb.append("inst " + getID() + " with ");
        HashMap<String,String> ht = getRenamedClasses();
        boolean first = true;
        for (String k : ht.keySet()) {
            sb.append( first ? "" : ", ");
            first = false;
            sb.append(k + " => " + ht.get(k));
        }
        sb.append(";");
    }

    public void PTClassAddsDecl.toString(StringBuffer s) {
        ClassDecl addClass = getClassDecl();
        s.append(indent());
        s.append("class " + addClass.getID() + " adds {");
        for(int i=0; i < addClass.getNumBodyDecl(); i++) {
            addClass.getBodyDecl(i).toString(s);
        }
        s.append(indent() + "}");
    }
}
