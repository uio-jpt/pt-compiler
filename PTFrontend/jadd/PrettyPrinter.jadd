aspect PrettyPrint {

    eq PTTemplate.dumpString() = getClass().getName() + " [" + getID() + "]";
    eq PTPackage.dumpString() = getClass().getName() + " [" + getID() + "]";
    eq PTClassAddsDecl.dumpString() = getClass().getName() + " [" + getID() + "]";
    eq PTClassDecl.dumpString() = getClass().getName() + " [" + getID() + "]";
    eq PTInstDecl.dumpString() = getClass().getName() + " [" + getID() + "]";
    eq PTDummyClass.dumpString() = getClass().getName() + " [" + getOrgID() + " => " + getID() + "]";
    eq PTDummyRename.dumpString() = getClass().getName() + " [" + getOrgID() + " -> " + getID() + "]";

    eq PTPackage.addsIndentationLevel() = true;
    eq PTTemplate.addsIndentationLevel() = true;

    public void PTCompilationUnit.toString(StringBuffer sb) {
        super.toString(sb);
        for (PTDecl ptDecl: getPTDecls()) 
            ptDecl.toString(sb);
    }

    public void PTDecl.toString(StringBuffer sb) {
        sb.append(indent());
        sb.append(getDeclType() + " " + getID() + " {");
        for (PTInstDecl inst : getPTInstDecls())
            inst.toString(sb);
        for (PTClassAddsDecl ptclass : getAdditionClassList())
            ptclass.toString(sb);        
        for (ClassDecl ptclass : getClassList())
            ptclass.toString(sb);

        sb.append(indent() + "}");
    }

    public void PTDummyRename.toString(StringBuffer sb) {
        sb.append(getOrgID() + " -> " + getID());
    }

    public void PTDummyClass.toString(StringBuffer sb) {
        sb.append(getOrgID() + " => " + getID());
        if (getNumPTDummyRename() > 0) {
            sb.append(" (");
            boolean first = true;
            for (PTDummyRename p : getPTDummyRenameList()) {
                sb.append(first ? "" : ", ");
                first = false;
                p.toString(sb);
            }
            sb.append(")");
        }
    }

    public void PTInstDecl.toString(StringBuffer sb) {
        sb.append(indent());
        sb.append("inst " + getID());

        boolean first = true;
        for (PTDummyClass p : getPTDummyClassList()) {
            sb.append( first ? " with " : ", ");
            first = false;
            p.toString(sb);
        }
        sb.append(";");
    }

    public void PTClassAddsDecl.toString(StringBuffer s) {
        ClassDecl addClass = getClassDecl();
        s.append(indent());
        s.append("class " + addClass.getID() + " adds {");
        for(int i=0; i < addClass.getNumBodyDecl(); i++) {
            addClass.getBodyDecl(i).toString(s);
        }
        s.append(indent() + "}");
    }
}
