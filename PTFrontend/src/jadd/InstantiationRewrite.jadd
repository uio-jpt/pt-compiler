import javaworld.InstantiationRewriter;
aspect InstantiationRewrite {

    protected boolean PTDecl.isRewritten = false;
    protected boolean PTInstDecl.isRewritten = false;

    rewrite PTInstDecl {
        when (this.isRewritten == false && templateIsRewritten())
        to PTInstDecl {
            this.isRewritten = true;
            addMissingDummyClassNodes();
            return this;
        }
    }
            
    rewrite PTDecl {
        when ( this.isRewritten == false && dependenciesAreRewritten())
        to PTDecl {
            InstantiationRewriter x = new InstantiationRewriter(this);            
            x.run();
            this.isRewritten = true;            
            return this;
        }
    }

    rewrite PTClassAddsDecl {
        when (getPTDecl().isRewritten)
        to PTClassDecl {
            PTClassDecl newClassDecl = new PTClassDecl(getClassDecl());
            return newClassDecl;
        }
    }

    rewrite TemplateMethodAccessShort {
        when (hostIsRewritten())
        to TemplateMethodAccess {
            PTClassDecl host = (PTClassDecl) getParentClass(PTClassDecl.class);
            String methodName = getID();
            List<Expr>  argList = getArgList(); // getArgListNoTransform??
            String tClassID = getTClassID();
            String templateID = host.determineTemplateID(tClassID);
            return new TemplateMethodAccess(methodName,argList, tClassID,templateID);
        }
    }

    rewrite TemplateConstructorAccessShort {
        when (hostIsRewritten())
        to TemplateConstructorAccess {
            PTClassDecl host = (PTClassDecl) getParentClass(PTClassDecl.class);
            String methodName = getID();
            List<Expr>  argList = getArgList(); // getArgListNoTransform??
            String tClassID = getTClassID();
            String templateID = host.determineTemplateID(tClassID);
            return new TemplateConstructorAccess(methodName,argList, tClassID,templateID);
        }
    }            
    
    
    syn boolean PTMethodAccess.hostIsRewritten() = hasParentClass(PTClassDecl.class);

    syn String PTClassDecl.determineTemplateID(String tClassID) {
        return "UNKNOWN123666P";
    }
}
