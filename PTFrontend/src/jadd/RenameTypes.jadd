aspect RenameTypes {

    public void ASTNode.renameTypes(Map<String,String> ht) {
        for(int i = 0; i < getNumChild(); i++) {
            ASTNode child = getChild(i);
            boolean result = child.visitRename(ht);
            if (result) {
//                System.out.println("renamed " + child.dumpString());
            }
            child.renameTypes(ht);
        }
    }

    public boolean ASTNode.visitRename(Map<String,String> ht) {
        return false;
    }

    public boolean TypeAccess.visitRename(Map<String,String> ht) {
        if (ht.containsKey(getID())) {
            setID(ht.get(getID()));
            flushCaches();
            return true;
        }
        return false;
    }

    public boolean ConstructorDecl.visitRename(Map<String,String> ht) {
        if (ht.containsKey(getID())) {
            setID(ht.get(getID()));
            return true;
        }
        return false;
    }

    public boolean TypeDecl.visitRename(Map<String,String> ht) {
        if (ht.containsKey(getID())) {
            setID(ht.get(getID()));
            return true;
        }
        return false;
    }

}
