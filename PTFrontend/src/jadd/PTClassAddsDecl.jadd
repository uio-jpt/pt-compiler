aspect PTClassAddsDecl {

    @Override
    public void PTClassAddsDecl.collectErrors () {
        // Does not errorcheck a addClass node.
    }

    public boolean ASTNode.hasParentClass(Class c) {
        ASTNode p = getParent();
        while (p!= null) {
            if (c.isInstance(p)) return true;
            p = p.getParent();
        }
        return false;
    }

    public ASTNode ASTNode.getParentClass(Class c) {
        ASTNode p = getParent();
        while (p != null) {
            if (c.isInstance(p)) return p;
            p = p.getParent();
        }
        return null;
    }

    public void PTClassAddsDecl.updateSuperName(LinkedList<PTDummyClass> dummies) {
        String name = null;
        for (PTDummyClass dummy : dummies) {
            String dummySuperName = dummy.getRenamedSuperclassName();
            if (dummySuperName != null) {
                if (name == null)
                    name = dummySuperName;
                else if (dummySuperName.equals(name)) {
                    // all ok
                } else {
                    error(String.format("Merge error for %s. superklasses %s and %s must be merged.\n",
                                         getID(), name, dummySuperName));
                }
            }
        }
        if (name != null) {
            getClassDecl().setSuperClassAccess(new TypeAccess(name));
        }
    }
}
