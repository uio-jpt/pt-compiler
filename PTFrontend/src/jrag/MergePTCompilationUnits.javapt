aspect MergePTCompilationUnits {
    /* Note: this cannot be done as a rewrite -- Program (the root node in the AST)
       doesn't get rewritten. We need to manually make this happen. */

    public int Program.getNumberOfPTCompilationUnits() {
        int rv = 0;
        for(int i=0;i<getNumCompilationUnit();i++) {
            if( getCompilationUnit(i) instanceof PTCompilationUnit ) {
                // System.out.println( getCompilationUnit(i).pathName() + " is a pt compilation unit" );
                rv++;
            } else {
                // System.out.println( getCompilationUnit(i).pathName() + " is something else" );
            }
        }
        // System.out.println( "number of ptcompilationunits: " + rv );
        return rv;
    }

    public void Program.mergePtCompilationUnits() {
            // System.out.println( "PERFORMING MERGE OF COMPILATION UNITS" );

            String name = "$mergedPTCU$";
            List<ImportDecl> p1 = new List<ImportDecl>();
            List<TypeDecl> p2 = new List<TypeDecl>();
            List<PTDecl> p3 = new List<PTDecl>();
            
            for(int i=0;i<getNumChild();) {
                if( getChild(i) instanceof PTCompilationUnit ) {
                    PTCompilationUnit ptcu = (PTCompilationUnit) getChild(i);
                    for( ImportDecl id : ptcu.getImportDeclList() ) {
                        p1 = p1.add( id );
                    }
                    for( TypeDecl td : ptcu.getTypeDeclList() ) {
                        p2 = p2.add( td );
                    }
                    for( PTDecl pd : ptcu.getPTDeclList() ) {
                        p3 = p3.add( pd );
                    }

                    removeChild(i);
                } else {
                    i++;
                }
            }

            PTCompilationUnit ptuc = new PTCompilationUnit( name, p1, p2, p3 );
            ptuc.addChild( ptuc );

            flushCaches();

            // System.out.println( "PERFORMED MERGE OF COMPILATION UNITS" );
    }

}
