aspect TypeCheck {
    
    eq PTCompilationUnit.getPTDecl(int i).handlesException(TypeDecl exceptionType) =
      !exceptionType.isUncheckedException();

    public void PTInstTuple.typeCheck() {
        if (getOriginator()==null) { 
            error("Unable to find class " + getOrgID() + " in template " + getTemplate().getID() + "\n");
        }
    }

    public void PTClassDecl.typeCheck() {
        ClassDecl decl = getClassDecl();
        if (decl.hasSuperClassAccess()) {
            // PTClassDecl can only extend another PTClassDecl
            TypeDecl superclass = decl.getSuperClassAccess().type();
            PTDecl container = getPTDecl();            
            if (!container.getClassList().contains(superclass)) {
                String msg = String.format("PTClassDecl %s may only extend another PTClassDecl. Superclass, %s, is not defined in %s %s", getID(), superclass.getID(), container.getDeclType(), container.getID());
            }
        }
    }

    public void TemplateMethodAccess.typeCheck() {
        super.typeCheck();
        // TemplateMethodAccess : PTMethodAccess ::= <TClassID> <TemplateID>;
        // TODO: Denne er litt buggy, dvs. gir flere feil 
        // siden kopierte TemplateMethodAccess ikke tar med seg
        // inst clausen..
        if (!getPTDecl().visibleTemplateNames().contains(getTemplateID())) {
            error("Template " + getTemplateID() + " not visible in current scope.");
        }
    }
}

