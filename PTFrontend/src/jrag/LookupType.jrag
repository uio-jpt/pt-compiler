
aspect LookupType {

    inh TypeDecl PTDecl.lookupType(String packageName, String typeName);
    eq PTCompilationUnit.getPTDecl(int i).lookupType(String packageName, String typeName) = lookupType(packageName, typeName);

    eq PTDecl.getSimpleClass(int i).lookupType(String packageName, String typeName) {
        String fullName = packageName.equals("") ? typeName : packageName + "." + typeName;
        for (SimpleClass cls : getSimpleClassList()) {
            TypeDecl type = cls.getClassDecl();
            if (type.fullName().equals(fullName)) {
                return type;
            }
        }
        return lookupType(packageName, typeName);
    }


    syn TypeDecl PTTemplate.lookupType(String name) {
        for (TypeDecl cls: getClassList()) {
            if (cls.getID().equals(name)) {
                return cls;
            }
        }
        return null;
    }

    syn ClassDecl PTDummyClass.getOriginator() = (ClassDecl) getTemplate().lookupType(getOrgID());

    syn PTTemplate PTDecl.lookupTemplate(String name) = null;
    eq PTTemplate.lookupTemplate(String name) = name.equals(getID()) ? this : null;

    syn PTClassAddsDecl PTDecl.lookupAddClass(String name) {
        for (PTClassAddsDecl decl: getAdditionClassList()) {
            if (decl.getID().equals(name))
                return decl;
        }
        return null;
    }

    inh SimpleSet SimpleClass.lookupType(String name);

    eq PTDecl.getSimpleClass(int i).lookupType(String name) {
        SimpleSet res = null;
        for (SimpleClass s : getSimpleClassList()) {
            ClassDecl cd = s.getClassDecl();
            if (cd.getID().equals(name))
                return SimpleSet.emptySet.add(cd);
        }
        TypeDecl t = lookupType("", name);
        if (t!=null) return SimpleSet.emptySet.add(t);
    }

    inh ClassDecl TemplateMethodAccess.getClassDecl(String className);

    eq ASTNode.getChild(int i).getClassDecl(String className) {
    }
    eq PTCompilationUnit.getPTDecl(int j).getClassDecl(String className) {
        for (int i=0; i<getNumPTDecl(); i++) {
            if (j==i) continue;
            // System.out.println("*** Looking at " + getPTDecl(i) + "***");
            ClassDecl res = getPTDecl(i).getInnerClassDecl(className);
            if (res!=null) return res;
        }
        return null;
    }

    syn ClassDecl ASTNode.getInnerClassDecl(String className) {
        for (int i=0; i<getNumChild(); i++) {
            ClassDecl res = getChild(i).getInnerClassDecl(className);
            if (res!=null) return res;
        }
        return null;
    }

    eq ClassDecl.getInnerClassDecl(String className) = 
        getID().equals(className) ? this : null;

}
