aspect LookupPTPackage {
  refine LookupFullyQualifiedTypes
  eq Program.lookupType(String packageName, String typeName) {
    String fullName = packageName.equals("") ? typeName : packageName + "." + typeName;
    for(int i = 0; i < getNumCompilationUnit(); i++) {
      CompilationUnit u = (CompilationUnit) getCompilationUnit(i);
      if( u instanceof PTCompilationUnit ) {
        PTCompilationUnit ptu = (PTCompilationUnit) u;
        for( PTDecl ptd : ptu.getPTDeclList() ) {
            if ( !ptd.getID().equals( packageName ) ) continue;
            SimpleSet ss = ptd.lookupTypeInPTDecl( typeName );
            if( ss.size() > 0 ) {
                TypeDecl td = (TypeDecl) ss.iterator().next();
//                System.out.println( "was ABLE to find: " + td.fullName() );
                return td;
            }
        }
        continue;
      }
      for(int j = 0; j < getCompilationUnit(i).getNumTypeDecl(); j++) {
        TypeDecl type = getCompilationUnit(i).getTypeDecl(j);
        if(type.fullName().equals(fullName)) {
          return type;
        }
      }
    }

//    System.out.println( "was unable to find: " + fullName );

    CompilationUnit u = getCompilationUnit(fullName);
    if(u != null) {
      addCompilationUnit(u);
      getCompilationUnit(getNumCompilationUnit()-1);
      for(int j = 0; j < u.getNumTypeDecl(); j++) {
        if(u.getTypeDecl(j).name().equals(typeName)) {
          return u.getTypeDecl(j);
        }
      }
      //throw new Error("No type named " + typeName + " in file " + fullName + ", " + u.pathName() + ", " + u.relativeName());
    }

    return lookupLibType(packageName, typeName);
  }

}
