<!--
 Targets for working from terminal window:
       build (default) - generates java files and compiles them
       clean           - removes all generated files and class files
 Targets for working from Eclipse:
       gen             - generates java files
       genClean        - removes all generated files and their class files
-->
<project name="Java1.4Backend" default="build">

<!-- location of Java1.4Frontend -->
<property name="Java1.4Frontend" value="../Java1.4Frontend"/>

<!-- "package" is the directory where generated files will be stored -->
<property name="package" value="AST"/>

<!-- "tools" is the directory where generators and libraries are located. -->
<property name="tools" value="${Java1.4Frontend}/tools"/>

<!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
<taskdef name="jflex" classname="JFlex.anttask.JFlexTask"
  classpath="${tools}/JFlex.jar"/>
<!-- "beaver" is an ant task class for the parser generator in beaver-ant.jar -->
<taskdef name="beaver" classname="beaver.comp.run.AntTask"
  classpath="${tools}/beaver-ant.jar"/>
<!-- "jastadd" is an ant task class in jastadd2.jar -->
<taskdef name="jastadd" classname="jastadd.JastAddTask"
  classpath="${tools}/jastadd2.jar"/>

<target name="build" depends="gen"
  description="compile JastAddJ">
  <javac debug="true" nowarn="true" srcdir="." includes="**/*.java"
    excludes="test/**" 
    classpath=".:${tools}/junit.jar"
    includeantruntime="false"/>
</target>

<!-- generate compiler source files -->
<target name="gen" depends="scanner,parser">
  <!-- create AST node types and weave aspect modules -->
  <jastadd package="${package}" rewrite="true" beaver="true" noVisitCheck="true"
    noCacheCycle="true" outdir="${basedir}">
    <fileset dir="${Java1.4Frontend}">
      <include name="**/*.ast"/>
      <include name="**/*.jrag"/>
      <include name="**/*.jadd"/>
    </fileset>
    <fileset dir=".">
      <include name="**/*.ast"/>
      <include name="**/*.jrag"/>
      <include name="**/*.jadd"/>
    </fileset>
  </jastadd>
  <!-- copy library files-->
  <copy todir="beaver" preservelastmodified="true">
    <fileset dir="${Java1.4Frontend}/beaver">
      <include name="**/*.java"/>
    </fileset>
  </copy>
</target>

<!-- generate scanner -->
<target name="scanner">
  <mkdir dir="scanner"/>
  <!-- compose the scanner -->
  <concat destfile="scanner/JavaScanner.flex" binary="true" force="false">
    <filelist dir="${Java1.4Frontend}/scanner">
      <file name="preamble.flex"/>
      <file name="macros.flex"/>
      <file name="rules_preamble.flex"/>
      <file name="WhiteSpace.flex"/>
      <file name="Comments.flex"/>
      <file name="Keywords.flex"/>
      <file name="Literals.flex"/>
      <file name="Separators.flex"/>
      <file name="Operators.flex"/>
      <file name="Identifiers.flex"/>
      <file name="postamble.flex"/>
    </filelist>
  </concat>
  <!-- generate the scanner -->
  <jflex file="scanner/JavaScanner.flex" outdir="scanner" nobak="yes"/>
  <copy todir="scanner" file="${Java1.4Frontend}/scanner/Unicode.java"
    preservelastmodified="true"/>
</target>

<!-- generate parser -->
<target name="parser">
  <mkdir dir="parser"/>
  <!-- generate the parser phase 1, create a full .lalr specification from
       fragments -->
  <concat destfile="parser/JavaParser.all" binary="true" force="false">
    <filelist dir="${Java1.4Frontend}">
      <file name="parser/preamble.parser"/>
      <file name="parser/java14.parser"/>
      <file name="parser/errorrecovery.parser"/>
    </filelist>
  </concat>
  <!-- generate the parser phase 2, translating .lalr to .beaver -->
  <java classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar"
    classname="Main" fork="true">
    <arg line="parser/JavaParser.all parser/JavaParser.beaver"/>
  </java>
  <!-- generate the parser phase 3, translating .beaver to .java -->
  <beaver file="parser/JavaParser.beaver" terminalNames="yes" compress="no"
    useSwitch="yes"/>
</target>

<target name="clean" depends="cleanGen"
  description="remove generated source and class files">
  <!-- delete all .class files recursively -->
  <delete>
    <fileset dir="." includes="**/*.class"/>
  </delete>
  <delete file="JavaComppiler.jar"/>
  <delete file="Java1.4Backend-src.jar"/>
</target>

<!-- remove generated source files -->
<target name="cleanGen">
  <delete dir="${package}"/>
  <delete dir="scanner"/>
  <delete dir="parser"/>
  <delete dir="beaver"/>
</target>

<target name="jar" depends="build"
  description="Build a binary distribution">
  <jar destfile="JavaCompiler.jar" basedir="." includes="**/*.class"
    excludes="test/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
</target>

<target name="source" depends="build"
  description="build a source distribution">
  <jar destfile="Java1.4Backend-src.jar">
    <fileset dir="..">
      <!-- include backend source file -->
      <include name="Java1.4Backend/JavaCompiler.java"/>
      <include name="Java1.4Backend/**/*.ast"/>
      <include name="Java1.4Backend/**/*.jrag"/>
      <include name="Java1.4Backend/**/*.jadd"/>
      <!-- include buildfile used to build the backend -->
      <include name="Java1.4Backend/build.xml"/>
      <!-- include readme and licence -->
      <include name="Java1.4Backend/README"/>
      <include name="Java1.4Backend/licences/BSD"/>
    </fileset>
    <manifest>
    </manifest>
  </jar>
</target>

<target name="bootstrap" depends="jar"
  description="bootstrap JastAddJ">
  <fileset dir="." id="source.files">
    <!-- include generated source file -->
    <include name="JavaCompiler.java"/>
    <include name="AST/*.java"/>
    <include name="beaver/*.java"/>
    <include name="parser/*.java"/>
  </fileset>
  <pathconvert pathsep=" " property="sources" refid="source.files"/>
  <echo message="Building using javac compiled java compiler"/>
  <java jar="JavaCompiler.jar">
    <arg line="-classpath . ${sources}"/>
  </java>
  <jar destfile="JavaCompiler-bootstrapped.jar" basedir="."
    includes="**/*.class" excludes="test/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
  <echo message="Building using bootstrapped java compiler"/>
  <java jar="JavaCompiler-bootstrapped.jar">
    <arg line="-classpath . ${sources}"/>
  </java>
  <jar destfile="JavaCompiler-bootstrapped.jar" basedir="."
    includes="**/*.class" excludes="test/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
</target>

</project>

